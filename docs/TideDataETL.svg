<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="552px" preserveAspectRatio="none" style="width:1091px;height:552px;background:#FFFFFF;" version="1.1" viewBox="0 0 1091 552" width="1091px" zoomAndPan="magnify"><defs><filter height="300%" id="flbb309thsi8d" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#FFFFFF" filter="url(#flbb309thsi8d)" height="260.1953" style="stroke:#000000;stroke-width:2.0;" width="1068.5" x="9" y="232.0938"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="362" x2="362" y1="40.2969" y2="509.2891"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="561" x2="561" y1="40.2969" y2="509.2891"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="692" x2="692" y1="40.2969" y2="509.2891"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="826.5" x2="826.5" y1="40.2969" y2="509.2891"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="983.5" x2="983.5" y1="40.2969" y2="509.2891"/><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="111" x="305" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="312" y="24.9951">DataManager</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="111" x="305" y="508.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="312" y="528.2842">DataManager</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="123" x="498" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="505" y="24.9951">TidePredictions</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="123" x="498" y="508.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="505" y="528.2842">TidePredictions</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="111" x="635" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="642" y="24.9951">TideRetriever</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="111" x="635" y="508.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="642" y="528.2842">TideRetriever</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="124" x="762.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="769.5" y="24.9951">TideDataParser</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="124" x="762.5" y="508.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="769.5" y="528.2842">TideDataParser</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="163" x="900.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="907.5" y="24.9951">TimeSeriesDataPoint</text><rect fill="#FEFECE" filter="url(#flbb309thsi8d)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="163" x="900.5" y="508.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="907.5" y="528.2842">TimeSeriesDataPoint</text><polygon fill="#A80036" points="549.5,67.4297,559.5,71.4297,549.5,75.4297,553.5,71.4297" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="362.5" x2="555.5" y1="71.4297" y2="71.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="369.5" y="66.3638">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="382.5" y="66.3638">Load</text><polygon fill="#A80036" points="680.5,96.5625,690.5,100.5625,680.5,104.5625,684.5,100.5625" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="561.5" x2="686.5" y1="100.5625" y2="100.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="568.5" y="95.4966">2</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="581.5" y="95.4966">Retrieve</text><polygon fill="#A80036" points="572.5,125.6953,562.5,129.6953,572.5,133.6953,568.5,129.6953" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="566.5" x2="691.5" y1="129.6953" y2="129.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="578.5" y="124.6294">3</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="591.5" y="124.6294">std::string</text><polygon fill="#A80036" points="814.5,154.8281,824.5,158.8281,814.5,162.8281,818.5,158.8281" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="561.5" x2="820.5" y1="158.8281" y2="158.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="568.5" y="153.7622">4</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="111" x="581.5" y="153.7622">Parse(std::string)</text><polygon fill="#A80036" points="572.5,183.9609,562.5,187.9609,572.5,191.9609,568.5,187.9609" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="566.5" x2="825.5" y1="187.9609" y2="187.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="578.5" y="182.895">5</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="228" x="591.5" y="182.895">std::vector&lt;TimeSeriesDataPoint&gt;</text><polygon fill="#A80036" points="373.5,213.0938,363.5,217.0938,373.5,221.0938,369.5,217.0938" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="367.5" x2="560.5" y1="217.0938" y2="217.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="379.5" y="212.0278">6</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="100" x="392.5" y="212.0278">TidePredictions</text><path d="M9,232.0938 L85,232.0938 L85,239.0938 L75,249.0938 L9,249.0938 L9,232.0938 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="260.1953" style="stroke:#000000;stroke-width:2.0;" width="1068.5" x="9" y="232.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="31" x="24" y="245.1606">loop</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="224" x="100" y="244.3042">[config-&gt;getDaysToDisplay() times]</text><polygon fill="#A80036" points="549.5,266.3594,559.5,270.3594,549.5,274.3594,553.5,270.3594" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="362.5" x2="555.5" y1="270.3594" y2="270.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="369.5" y="265.2935">7</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="162" x="382.5" y="265.2935">PredictionsForDate(date)</text><polygon fill="#A80036" points="972,295.4922,982,299.4922,972,303.4922,976,299.4922" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="561.5" x2="978" y1="299.4922" y2="299.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="568.5" y="294.4263">8</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="370" x="581.5" y="294.4263">ValuesForDate(std::vector&lt;TimeSeriesDataPoint&gt;, date)</text><polygon fill="#A80036" points="572.5,324.625,562.5,328.625,572.5,332.625,568.5,328.625" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="566.5" x2="983" y1="328.625" y2="328.625"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="578.5" y="323.5591">9</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="228" x="591.5" y="323.5591">std::vector&lt;TimeSeriesDataPoint&gt;</text><polygon fill="#A80036" points="972,353.7578,982,357.7578,972,361.7578,976,357.7578" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="561.5" x2="978" y1="357.7578" y2="357.7578"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="568.5" y="352.6919">10</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="298" x="590.5" y="352.6919">MinValue(std::vector&lt;TimeSeriesDataPoint&gt;)</text><polygon fill="#A80036" points="572.5,382.8906,562.5,386.8906,572.5,390.8906,568.5,386.8906" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="566.5" x2="983" y1="386.8906" y2="386.8906"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="578.5" y="381.8247">11</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="207" x="600.5" y="381.8247">MinValue(TimeSeriesDataPoint)</text><polygon fill="#A80036" points="972,412.0234,982,416.0234,972,420.0234,976,416.0234" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="561.5" x2="978" y1="416.0234" y2="416.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="568.5" y="410.9575">12</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="298" x="590.5" y="410.9575">MinValue(std::vector&lt;TimeSeriesDataPoint&gt;)</text><polygon fill="#A80036" points="572.5,441.1563,562.5,445.1563,572.5,449.1563,568.5,445.1563" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="566.5" x2="983" y1="445.1563" y2="445.1563"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="578.5" y="440.0903">13</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="207" x="600.5" y="440.0903">MinValue(TimeSeriesDataPoint)</text><polygon fill="#A80036" points="373.5,475.2891,363.5,479.2891,373.5,483.2891,369.5,479.2891" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="367.5" x2="560.5" y1="479.2891" y2="479.2891"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="379.5" y="474.2231">14</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="59" x="401.5" y="474.2231">TideData</text><path d="M19,458.1563 L19,483.1563 L353,483.1563 L353,468.1563 L343,458.1563 L19,458.1563 " fill="#FBFB77" filter="url(#flbb309thsi8d)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M343,458.1563 L343,468.1563 L353,468.1563 L343,458.1563 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="313" x="25" y="475.2231">TideData instance appended to DailyPredictions</text><!--MD5=[c7f833d46266752e202948e347480bd2]
@startuml
'https://plantuml.com/sequence-diagram

autonumber

DataManager -> TidePredictions : Load
TidePredictions -> TideRetriever : Retrieve
TidePredictions <- TideRetriever : std::string
TidePredictions -> TideDataParser : Parse(std::string)
TidePredictions <- TideDataParser : std::vector<TimeSeriesDataPoint>
DataManager <- TidePredictions : TidePredictions

loop config->getDaysToDisplay() times
    DataManager -> TidePredictions : PredictionsForDate(date)

    TidePredictions -> TimeSeriesDataPoint : ValuesForDate(std::vector<TimeSeriesDataPoint>, date)
    TidePredictions <- TimeSeriesDataPoint : std::vector<TimeSeriesDataPoint>

    TidePredictions -> TimeSeriesDataPoint : MinValue(std::vector<TimeSeriesDataPoint>)
    TidePredictions <- TimeSeriesDataPoint : MinValue(TimeSeriesDataPoint)

    TidePredictions -> TimeSeriesDataPoint : MinValue(std::vector<TimeSeriesDataPoint>)
    TidePredictions <- TimeSeriesDataPoint : MinValue(TimeSeriesDataPoint)

    DataManager <- TidePredictions : TideData

    note left : TideData instance appended to DailyPredictions
end

@enduml

@startuml

autonumber

DataManager -> TidePredictions : Load
TidePredictions -> TideRetriever : Retrieve
TidePredictions <- TideRetriever : std::string
TidePredictions -> TideDataParser : Parse(std::string)
TidePredictions <- TideDataParser : std::vector<TimeSeriesDataPoint>
DataManager <- TidePredictions : TidePredictions

loop config->getDaysToDisplay() times
    DataManager -> TidePredictions : PredictionsForDate(date)

    TidePredictions -> TimeSeriesDataPoint : ValuesForDate(std::vector<TimeSeriesDataPoint>, date)
    TidePredictions <- TimeSeriesDataPoint : std::vector<TimeSeriesDataPoint>

    TidePredictions -> TimeSeriesDataPoint : MinValue(std::vector<TimeSeriesDataPoint>)
    TidePredictions <- TimeSeriesDataPoint : MinValue(TimeSeriesDataPoint)

    TidePredictions -> TimeSeriesDataPoint : MinValue(std::vector<TimeSeriesDataPoint>)
    TidePredictions <- TimeSeriesDataPoint : MinValue(TimeSeriesDataPoint)

    DataManager <- TidePredictions : TideData

    note left : TideData instance appended to DailyPredictions
end

@enduml

PlantUML version 1.2021.11(Sat Oct 02 06:26:11 PDT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: CA
--></g></svg>